1. Make a directory called, for example, "hs" where we can write our
   Haskell programs.

   In a text editor, write a file called, for example, "factorial.hs"
   that contains the following.  The function definitions should go
   against the left margin.  (They are indented here just for neatness).
   Advanced text editors like Emacs, Vim, Sublime and Notepad++ will
   have a Haskell mode.

      f 0 = 1
      f n = n * f (n-1)

   In GHCi, change to your "hs" directory by typing something like this.
   (The ":cd" command starting with a colon is a GHCi command, rather than
   part of the Haskell language itself).  You can use TAB completion on
   the directory names.

      :cd /some/where/hs

   Load your program by typing this and pressing TAB.

      :l fa

   GHCi will apply TAB completion to give you ":l factorial.hs" so all
   you have to do is press ENTER.

   If your program loads without complaint, try it out by typing this
   at the GHCi prompt:

      f 100

   If you get complicated error messages, don't panic!  This is normal.
   Just tweak your program and try loading it again, using this (short
   for "reload"):

      :r

2. Write a function that computes the average of a list of numbers.

3. Write a function that says if a string is a palindrome.

4. Write a function that cuts all the spaces out of a string.

5. If you have time, start browsing the standard Haskell functions here:

      http://dominicprior.github.io/standard.html
